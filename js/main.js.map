{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["//  goToTop\r\n/*  */\r\nfunction checkScroll() {\r\n  if (\r\n    window.pageYOffset >\r\n    document.querySelector('.banner').offsetHeight - document.querySelector('.header').offsetHeight\r\n  ) {\r\n    document.querySelector('.header').classList.add('js__sticky');\r\n  } else {\r\n    document.querySelector('.header').classList.remove('js__sticky');\r\n  }\r\n\r\n  /*  */\r\n  if (window.pageYOffset >= document.querySelector('.banner').offsetHeight / 2) {\r\n    document.querySelector('.indicator').classList.remove('js__hidden');\r\n    document.querySelector('.indicator').classList.remove('js__none');\r\n  } else {\r\n    document.querySelector('.indicator').classList.add('js__hidden');\r\n    document.querySelector('.indicator').classList.add('js__none');\r\n  }\r\n}\r\n\r\nwindow.onscroll = () => {\r\n  checkScroll();\r\n};\r\n\r\n//  goToTop\r\ndocument.querySelector('.indicator').addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: 'smooth',\r\n  });\r\n});\r\n\r\n//  toogleMenu\r\nshowSearch();\r\nshowMenu();\r\n\r\nfunction showSearch() {\r\n  let _navbar = document.querySelector('.navbar'),\r\n    _btnShow = _navbar.querySelector(\"[data-js='toggleSearch']\"),\r\n    _searchForm = _navbar.querySelector('.navbar__form'),\r\n    _btnClose = _searchForm.querySelector('.i_close');\r\n\r\n  _btnShow.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n    _searchForm.style = 'transform:scale(1)';\r\n  });\r\n\r\n  _btnClose.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n    _searchForm.style = 'transform:scale(0)';\r\n  });\r\n}\r\n\r\nfunction showMenu() {\r\n  let _navbar = document.querySelector('.navbar'),\r\n    _btnMenu = _navbar.querySelector('[data-js=\"toggleMenu\"]'),\r\n    _menu = _navbar.querySelector('.menu');\r\n\r\n  _btnMenu.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n\r\n    _menu.classList.toggle('js__block');\r\n    _menu.classList.toggle('js__menu_show');\r\n    _btnMenu.classList.toggle('i_close');\r\n  });\r\n}\r\n\r\n//  goToMenu\r\ndocument.querySelector('.banner__link').addEventListener('click', (event) => {\r\n  event.preventDefault();\r\n  window.scrollTo({\r\n    top: document.querySelector('.banner').offsetHeight,\r\n    behavior: 'smooth',\r\n  });\r\n});\r\n\r\n//  goToMenu\r\n// ! someText\r\n// todo someText\r\n// * someText\r\n// // someText\r\n// someText\r\n\r\n('use strict');\r\nlet multiItemSlider = (function () {\r\n  function _isElementVisible(element) {\r\n    let rect = element.getBoundingClientRect(),\r\n      vWidth = window.innerWidth || Element.clientWidth,\r\n      vHeight = window.innerHeight || Element.clientHeight,\r\n      elemFromPoint = function (x, y) {\r\n        return document.elementFromPoint(x, y);\r\n      };\r\n\r\n    if (rect.right < 0 || rect.bottom < 0 || rect.left > vWidth || rect.top > vHeight) return false;\r\n    return (\r\n      element.contains(elemFromPoint(rect.left, rect.top)) ||\r\n      element.contains(elemFromPoint(rect.right, rect.top)) ||\r\n      element.contains(elemFromPoint(rect.right, rect.bottom)) ||\r\n      element.contains(elemFromPoint(rect.left, rect.bottom))\r\n    );\r\n  }\r\n\r\n  return function (selector, config) {\r\n    let _mainElement = document.querySelector(selector),\r\n      _sliderWrapper = _mainElement.querySelector('.slider__wrapper'),\r\n      _sliderItems = _mainElement.querySelectorAll('.slider__item'),\r\n      _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width),\r\n      _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width),\r\n      _html = _mainElement.innerHTML,\r\n      _positionLeftItem = 0,\r\n      _transform = 0,\r\n      _step = (_itemWidth / _wrapperWidth) * 100,\r\n      _items = [],\r\n      _interval = 0,\r\n      _states = [\r\n        { active: false, minWidth: 0, count: 1 },\r\n        { active: false, minWidth: 576, count: 2 },\r\n        { active: false, minWidth: 992, count: 3 },\r\n        { active: false, minWidth: 1200, count: 4 },\r\n      ],\r\n      _config = {\r\n        isCycling: false,\r\n        direction: 'next', //prev && next\r\n        interval: 5000,\r\n        pause: true,\r\n      };\r\n\r\n    for (let key in config) {\r\n      if (key in _config) {\r\n        _config[key] = config[key];\r\n      }\r\n    }\r\n    _sliderItems.forEach(function (item, index) {\r\n      _items.push({ item: item, position: index, transform: 0 });\r\n    });\r\n\r\n    let _setActive = function () {\r\n      let _index = 0;\r\n\r\n      let width = parseFloat(document.body.clientWidth);\r\n\r\n      _states.forEach(function (item, index) {\r\n        _states[index].active = false;\r\n        if (width >= _states[index].minWidth) _index = index;\r\n      });\r\n      _states[_index].active = true;\r\n    };\r\n\r\n    let _getActive = function () {\r\n      let _index;\r\n\r\n      _states.forEach(function (item, index) {\r\n        if (_states[index].active) {\r\n          _index = index;\r\n        }\r\n      });\r\n      return _index;\r\n    };\r\n\r\n    let position = {\r\n      getItemMin: function () {\r\n        let indexItem = 0;\r\n\r\n        _items.forEach(function (item, index) {\r\n          if (item.position < _items[indexItem].position) {\r\n            indexItem = index;\r\n          }\r\n        });\r\n        return indexItem;\r\n      },\r\n      getItemMax: function () {\r\n        let indexItem = 0;\r\n\r\n        _items.forEach(function (item, index) {\r\n          if (item.position > _items[indexItem].position) {\r\n            indexItem = index;\r\n          }\r\n        });\r\n        return indexItem;\r\n      },\r\n      getMin: function () {\r\n        return _items[position.getItemMin()].position;\r\n      },\r\n      getMax: function () {\r\n        return _items[position.getItemMax()].position;\r\n      },\r\n    };\r\n\r\n    let _transformItem = function (direction) {\r\n      let nextItem;\r\n\r\n      if (!_isElementVisible(_mainElement)) {\r\n        return;\r\n      }\r\n      if (direction === 'next') {\r\n        _positionLeftItem++;\r\n        if (_positionLeftItem + _wrapperWidth / _itemWidth - 1 > position.getMax()) {\r\n          nextItem = position.getItemMin();\r\n          _items[nextItem].position = position.getMax() + 1;\r\n          _items[nextItem].transform += _items.length * 100;\r\n          _items[nextItem].item.style.transform = 'translateX(' + _items[nextItem].transform + '%)';\r\n        }\r\n        _transform -= _step;\r\n      }\r\n      if (direction === 'prev') {\r\n        _positionLeftItem--;\r\n        if (_positionLeftItem < position.getMin()) {\r\n          nextItem = position.getItemMax();\r\n          _items[nextItem].position = position.getMin() - 1;\r\n          _items[nextItem].transform -= _items.length * 100;\r\n          _items[nextItem].item.style.transform = 'translateX(' + _items[nextItem].transform + '%)';\r\n        }\r\n        _transform += _step;\r\n      }\r\n      _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';\r\n    };\r\n\r\n    let _controlClick = function (e) {\r\n      if (e.target.classList.contains('slider__control')) {\r\n        e.preventDefault();\r\n        let direction = e.target.classList.contains('slider__control_next') ? 'next' : 'prev';\r\n\r\n        _transformItem(direction);\r\n        clearInterval(_interval);\r\n        _cycle(_config.direction);\r\n      }\r\n    };\r\n\r\n    let _handleVisibilityChange = function () {\r\n      if (document.visibilityState === 'hidden') {\r\n        clearInterval(_interval);\r\n      } else {\r\n        clearInterval(_interval);\r\n        _cycle(_config.direction);\r\n      }\r\n    };\r\n\r\n    let _cycle = function (direction) {\r\n      if (!_config.isCycling) {\r\n        return;\r\n      }\r\n      // _interval = setInterval(function () {\r\n      //   _transformItem(direction);\r\n      // }, _config.interval);\r\n\r\n      _interval = setInterval(\r\n        function () {\r\n          _transformItem(direction);\r\n        },\r\n        _config.interval > 1000 ? _config.interval : 1000\r\n      );\r\n    };\r\n\r\n    let _refresh = function () {\r\n      clearInterval(_interval);\r\n      _mainElement.innerHTML = _html;\r\n      _sliderWrapper = _mainElement.querySelector('.slider__wrapper');\r\n      _sliderItems = _mainElement.querySelectorAll('.slider__item');\r\n      _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width);\r\n      _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width);\r\n      _positionLeftItem = 0;\r\n      _transform = 0;\r\n      _step = (_itemWidth / _wrapperWidth) * 100;\r\n      _items = [];\r\n      _sliderItems.forEach(function (item, index) {\r\n        _items.push({ item: item, position: index, transform: 0 });\r\n      });\r\n    };\r\n\r\n    let _setUpListeners = function () {\r\n      _mainElement.addEventListener('click', _controlClick);\r\n      if (_config.pause && _config.isCycling) {\r\n        _mainElement.addEventListener('mouseenter', function () {\r\n          clearInterval(_interval);\r\n        });\r\n        _mainElement.addEventListener('mouseleave', function () {\r\n          clearInterval(_interval);\r\n          _cycle(_config.direction);\r\n        });\r\n      }\r\n      document.addEventListener('visibilitychange', _handleVisibilityChange, false);\r\n      window.addEventListener('resize', function () {\r\n        let _index = 0,\r\n          width = parseFloat(document.body.clientWidth);\r\n\r\n        _states.forEach(function (item, index) {\r\n          if (width >= _states[index].minWidth) _index = index;\r\n        });\r\n        if (_index !== _getActive()) {\r\n          _setActive();\r\n          _refresh();\r\n        }\r\n      });\r\n    };\r\n\r\n    // инициализация\r\n    _setUpListeners();\r\n    if (document.visibilityState === 'visible') {\r\n      _cycle(_config.direction);\r\n    }\r\n    _setActive();\r\n\r\n    return {\r\n      next: function () {\r\n        _transformItem('next');\r\n      },\r\n      prev: function () {\r\n        _transformItem('prev');\r\n      },\r\n      stop: function () {\r\n        _config.isCycling = false;\r\n        clearInterval(_interval);\r\n      },\r\n      cycle: function () {\r\n        _config.isCycling = true;\r\n        clearInterval(_interval);\r\n      },\r\n    };\r\n  };\r\n})();\r\n\r\nmultiItemSlider('.members', {\r\n  // isCycling: true,\r\n  // interval: 5000,\r\n});\r\n\r\nmultiItemSlider('.quotes', {\r\n  isCycling: true,\r\n  interval: 3000,\r\n  direction: 'prev', //prev && next\r\n});\r\n\r\nmultiItemSlider('.sponsors', {\r\n  // isCycling: true,\r\n  // interval: 1000,\r\n});\r\n\r\n//  scrollTo\r\n// собираем все якоря; устанавливаем время анимации и количество кадров\r\nconst anchors = [].slice.call(document.querySelectorAll('.menu__link[href*=\"#\"]')),\r\n  animationTime = 3000,\r\n  framesCount = 20;\r\n\r\nanchors.forEach(function (item) {\r\n  // каждому якорю присваиваем обработчик события\r\n  item.addEventListener('click', function (e) {\r\n    // убираем стандартное поведение\r\n    e.preventDefault();\r\n\r\n    document.querySelector('.menu').classList.remove('js__block');\r\n    document.querySelector('[data-js=\"toggleMenu\"]').classList.remove('i_close');\r\n    let headerHeight = document.querySelector('.header').offsetHeight;\r\n    // для каждого якоря берем соответствующий ему элемент и определяем его координату Y\r\n    let coordY =\r\n      document.querySelector(item.getAttribute('href')).getBoundingClientRect().top + window.pageYOffset - headerHeight;\r\n\r\n    // ! проверить значок и немного отодвинуть\r\n\r\n    if (document.querySelector(item.getAttribute('href')).classList.contains('section_dark')) {\r\n      coordY = coordY - 30;\r\n    }\r\n\r\n    // запускаем интервал, в котором\r\n    let scroller = setInterval(function () {\r\n      // считаем на сколько скроллить за 1 такт\r\n      let scrollBy = coordY / framesCount;\r\n\r\n      // если к-во пикселей для скролла за 1 такт больше расстояния до элемента\r\n      // и дно страницы не достигнуто\r\n      if (\r\n        scrollBy > window.pageYOffset - headerHeight - coordY &&\r\n        window.innerHeight + window.pageYOffset - headerHeight < document.body.offsetHeight\r\n      ) {\r\n        // то скроллим на к-во пикселей, которое соответствует одному такту\r\n        // window.scrollBy(0, scrollBy);\r\n        window.scrollBy({\r\n          top: scrollBy,\r\n          left: 0,\r\n          behavior: 'smooth',\r\n        });\r\n      } else {\r\n        // иначе добираемся до элемента и выходим из интервала\r\n        window.scrollTo({\r\n          top: coordY,\r\n          left: 0,\r\n          behavior: 'smooth',\r\n        });\r\n\r\n        clearInterval(scroller);\r\n      }\r\n      // время интервала равняется частному от времени анимации и к-ва кадров\r\n    }, animationTime / framesCount);\r\n  });\r\n});"],"file":"main.js"}